variables:
  GIT_SUBMODULE_STRATEGY: recursive

image: python:latest

lektor:build:
  stage: build
  script:
  - pip install lektor
  - lektor build -f jsminify -f scsscompile --output-path build
  artifacts:
    paths:
      - build


deploy-to-stage:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SERVER_SSH_PRIV_KEY")
  script:
  - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USERNAME@$DOMAIN "mkdir -p webseite/staging-$CI_COMMIT_REF_NAME"
  - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -rp build/* "$USERNAME@$DOMAIN:webseite/staging-$CI_COMMIT_REF_NAME"
  - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -rp build/.htaccess "$USERNAME@$DOMAIN:webseite/staging-$CI_COMMIT_REF_NAME"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://toolbox-bodensee.de/staging-$CI_COMMIT_REF_NAME
  dependencies:
  - lektor:build
  except:
  - master


deploy-to-prod:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SERVER_SSH_PRIV_KEY")
  script:
  - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -rp build/* "$USERNAME@$DOMAIN:webseite"
  - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -rp build/.htaccess "$USERNAME@$DOMAIN:webseite"
  dependencies:
  - lektor:build
  only:
  - master


