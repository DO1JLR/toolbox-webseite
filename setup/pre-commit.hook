#!/bin/sh
hard_limit=$(git config hooks.filesizehardlimit)
: ${hard_limit:=100000}

if git-rev-parse --verify HEAD >/dev/null 2>&1 ; then
   against=HEAD
else
   # Initial commit: diff against an empty tree object
   against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

git diff-index --check --cached $against
err=$?

if [ $err -gt 0 ]; then
  echo "Your spaces don't agree with your core.whitespace rules."
  echo "You can commit with -n to bypass this pre-commit hook."
  exit $err
fi


list_new_or_modified_files()
{
    git diff --staged --name-status|sed -e '/^D/ d; /^D/! s/.\s\+//'
}

unmunge()
{
    local result="${1#\"}"
    result="${result%\"}"
    env echo -e "$result"
}

check_file_size()
{
    n=0
    while read -r munged_filename
    do
        f="$(unmunge "$munged_filename")"
        h=$(git ls-files -s "$f"|cut -d' ' -f 2)
        s=$(git cat-file -s "$h")
        if [ "$s" -gt $hard_limit ]
        then
            env echo -E 1>&2 "ERROR: hard size limit ($hard_limit) exceeded: $munged_filename ($s)"
            n=$((n+1))
        fi
    done

    [ $n -eq 0 ]
}

list_new_or_modified_files | check_file_size
err=$?

if [ $err -gt 0 ]; then
  echo "For binary files you should use git lfs."
  echo "You can commit with -n to bypass this pre-commit hook."
  exit $err
fi
